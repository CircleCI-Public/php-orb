version: 2.1

description: "Common CircleCI tasks for the PHP programming language.
              See this orb's source: https://github.com/CircleCI-Public/php-orb"

orbs:
  detect: circleci/os-detect@0.1

executors:
  default:
    description: "The official CircleCI PHP Docker image."
    parameters:
      tag:
        description: "The `circleci/php` Docker image version tag."
        type: string
        default: "latest"
    docker:
      - image: circleci/php:<< parameters.tag >>

commands:
  install:
    description: "Install PHP into your Ubuntu or Debian based image."
    parameters:
      version:
        description: "The PHP version."
        type: string
        default: "7.3"
    steps:
      - detect/init
      - run:
          name: "Install PHP"
          command: |
            sudo apt update && sudo apt install -y software-properties-common

            if [[ $OSD_ID == "ubuntu" ]]; then
              sudo add-apt-repository -yu ppa:ondrej/php
            elif [[ $OSD_ID == "debian" ]]; then
              curl -fsSL https://packages.sury.org/php/apt.gpg | sudo apt-key add -
              sudo add-apt-repository "deb https://packages.sury.org/php/ $(lsb_release -cs) main"
            else
              echo "OS not supported."
            fi

            sudo apt-get update
            sudo apt-get install -y php<< parameters.version >>
  install-composer:
    description: "Install Composer"
    steps:
      - run:
          name: "Install Composer"
          command: |
            curl -sS https://getcomposer.org/installer -o composer-setup.php
            sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
  load-cache:
    description: "Load cached Composer deps."
    parameters:
      key:
        description: "The cache key to use. The key is immutable."
        type: string
        default: "composer"
    steps:
      - restore_cache:
          keys:
            - << parameters.key >>-{{ checksum "composer.lock"  }}
  save-cache:
    description: "Save Composer deps to cache."
    parameters:
      key:
        description: "The cache key to use. The key is immutable."
        type: string
        default: "composer"
    steps:
      - save_cache:
          key: << parameters.key >>-{{ checksum "composer.lock"  }}
          paths:
            - "vendor"

examples:
  install-and-cache:
    description: "Install PHP, install composer, load cache and save cache"
    usage:
      version: 2.1

      orbs:
        php: circleci/php@y.x.z
      jobs:
        #create a new job
        install-and-cache:
          description: "Install PHP, install composer, load cache and save cache"
          executor: <<parameters.executor>>
          parameters:
            version:
              description: "The PHP version."
              type: string
              default: "7.3"
            key:
              description: "The cache key to use. The key is immutable."
              type: string
              default: "composer"
          steps:
            - php/install:
                version: <<parameters.version>>
            - php/install-composer
            - php/load-cache:
                key: <<parameters.key>>
            - php/save-cache:
                key: <<parameters.key>>

      workflows:
        simple_install_and_cache:
          jobs:
            - install-and-cache:
                #The PHP version, default to "7.3"
                version: "myPhpVersion"
                #The cache key to use. The key is immutable. default to "composer"
                key: "myCacheKey"